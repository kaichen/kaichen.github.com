<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Reading | The Kai Way]]></title>
  <link href="http://kaichen.github.io/blog/categories/reading/atom.xml" rel="self"/>
  <link href="http://kaichen.github.io/"/>
  <updated>2013-09-20T23:29:29+08:00</updated>
  <id>http://kaichen.github.io/</id>
  <author>
    <name><![CDATA[Kai Chen]]></name>
    <email><![CDATA[kaichenxyz@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[持续集成笔记本]]></title>
    <link href="http://kaichen.github.io/2008/05/13/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90de%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0"/>
    <updated>2008-05-13T00:00:00+08:00</updated>
    <id>http://kaichen.github.io/2008/05/13/持续集成de读书笔记</id>
    <content type="html"><![CDATA[<p>五一的两天空余时间，读完了<a href="http://www.amazon.com/Continuous-Integration-Improving-Addison-Wesley-Signature/dp/0321336380/ref=sr_11_1?ie=UTF8&amp;qid=1200534624&amp;sr=11-1">持续集成</a>这本书。</p>

<p>Continuous Integration，持续集成，简称CI。这是一项业界推荐的软件开发实践，是XP中提到的实践之一。CI有四个特征：</p>

<blockquote><p>与版本控制系统的连接
构建脚本
某种类型的反馈机制
集成源代码变更的过程</p></blockquote>

<p>CI的价值在于：</p>

<blockquote><p>减少风险
减少重复过程
在随时随地生成可部署的软件
对开发团队的软件产品建立起更大的产品信心</p></blockquote>

<p>CI的步骤：</p>

<blockquote><p>“I Build So Consistently”。四个步骤：“Identify”，“Build”，“Share”，“Continuous”。</p></blockquote>

<p>CI的实践：</p>

<p>经常提交代码</p>

<blockquote><p>不要提交无法构建的代码
立即修复无法集成的构建
编写自动化的开发者测试
必须通过所有测试和审查
执行私有构建
避免签出无法构建的代码</p></blockquote>

<p>CI可以缓解一些关键的风险：</p>

<blockquote><p>没有可部署的软件
很晚才发现缺陷
缺乏项目可见性
低品质的软件</p></blockquote>

<p>CI系统的创建：</p>

<blockquote><p>持续数据库集成
持续测试
持续审查
持续部署
持续反馈</p></blockquote>

<p>Rails 的CI系统有来自TW的<a href="http://cruisecontrolrb.thoughtworks.com/">cruisecontrolrb</a></p>
]]></content>
  </entry>
  
</feed>
